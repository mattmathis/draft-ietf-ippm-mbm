      <section anchor="slowstart" title="Slowstart tests">

        <t>These tests mimic slowstart: data is sent at twice the
        effective bottleneck rate to exercise the queue at the
        dominant bottleneck.</t>
        <section title="Full Window slowstart test">

          <t>This is a capacity test to confirm that slowstart is
          not likely to exit prematurely. Send slowstart bursts
          that are target_window_size total packets.</t>

          <t>Accumulate packet transfer statistics as described in 
          <xref target="statistics" /> to score the outcome. Pass if
          it is statistically significant that the observed number
          of good packets delivered between losses or ECN CE marks
          is larger than the target_run_length. Fail if it is
          statistically significant that the observed interval
          between losses or ECN CE marks is smaller than the
          target_run_length.</t>

          <t>It is deemed inconclusive if the elapsed time to send
          the data burst is not less than half of the time to
          receive the ACKs. (i.e. sending data too fast is ok, but
          sending it slower than twice the actual bottleneck rate
          as indicated by the ACKs is deemed inconclusive). The
          headway for the slowstart bursts should be the
          target_RTT.</t>

          <t>Note that these are the same parameters as the Sender
          Full Window burst test, except the burst rate is at
          slowestart rate, rather than sender interface rate.</t>
        </section>
        <section title="Slowstart AQM test">

          <t>Do a continuous slowstart (send data continuously at
          twice the implied IP bottleneck capacity), until the
          first loss, stop, allow the network to drain and repeat,
          gathering statistics on how many packets were delivered
          before the loss, the pattern of losses, maximum observed
          RTT and window size. Justify the results. There is not
          currently sufficient theory justifying requiring any
          particular result, however design decisions that affect
          the outcome of this tests also affect how the network
          balances between long and short flows (the "mice vs
          elephants" problem). The queue at the time of the first
          loss should be at least one half of the target_RTT.</t>

          <t>This is an engineering test: It must be performed on a
          quiescent network or testbed, since cross traffic has the
          potential to change the results.</t>
        </section>
      </section>

